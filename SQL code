--Looking at total cases vs. total deaths
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage
FROM covid_portfolio.Covid_deaths
ORDER BY Location, date;

--Looking at total cases vs. population (looks at what percentage of the population got COVID)
SELECT Location, date, population, total_cases, (total_cases/population)*100 as percentage_population_affected
FROM covid_portfolio.Covid_deaths
WHERE Location like '%States%'
ORDER BY Location, date;

--Looking at countries with highest infection rate compared to population
SELECT Location, population, MAX(total_cases) as highest_infection_count, MAX((total_cases/population))*100 as percentage_population_affected
FROM covid_portfolio.Covid_deaths
GROUP BY Location, population
ORDER BY percentage_population_affected DESC;

--Showing the countries with the highest death count per population
SELECT Location, MAX(total_deaths) as total_death_count
FROM covid_portfolio.Covid_deaths
WHERE continent is not null
GROUP BY Location
ORDER BY total_death_count DESC;

--Different view; total death count by continent; showing the continents with the highest death count per population 
SELECT continent, MAX(total_deaths) as total_death_count
FROM covid_portfolio.Covid_deaths
WHERE continent is not null
GROUP BY continent
ORDER BY total_death_count DESC;

--Global numbers: total death rate 
SELECT date, sum(new_cases) as total_cases, sum(new_deaths) as total_deaths, sum(new_deaths)/sum(new_cases) * 100 as global_death_percentage
FROM covid_portfolio.Covid_deaths
WHERE continent is not null
GROUP BY date
ORDER BY date, sum(new_cases)

--Joining deaths dataset with vaccinations data set
SELECT *
FROM covid_portfolio.Covid_deaths dea
JOIN covid_portfolio.covid_vaccinations vac
ON dea.location = vac.location
AND dea.date = vac.date;

--Looking at total population vs. vaccinations, using CTE to create temp tables and joined datasets
WITH PopvsVac as (SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (partition by dea.location ORDER BY dea.location, dea.date) as rolling_people_vaccinated
FROM covid_portfolio.Covid_deaths dea
JOIN covid_portfolio.covid_vaccinations vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent is not null)

SELECT *, (rolling_people_vaccinated/population*100) FROM PopvsVac

